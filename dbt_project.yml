
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'my_pack'
version: '1.0.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'dbt-prod-snowflake'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
#source-paths: ["models/source"]

analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  enabled: true        # configs defined here are applied to _all_ packages
  materialized: view   # but can be overridden in more specific configs below

  # pre- and post- hooks can be defined anywhere within the model hierarchy.
  # when defined at the root level (as they are here), they apply to all models
  # in all packages. These hooks are compiled into the model SQL and run either
  # before or after the model is materializated.
  pre-hook:
      - "set uuid=(select UUID_STRING())"
      - "alter session set query_tag = '{\"type\":\"dbt_model\",\"model\": \"{{this.name}}\"}'"
      - "insert into public.audit (model, state, time,log_uuid) values ('{{this.name}}', 'start', getdate(),$uuid)"


  post-hook:
      - "insert into public.audit (model, state, time) values ('{{this.name}}', 'end', getdate())"
  my_pack:
    BOD:
      enabled: true  
      schema: bod
      # Config indicated by + and applies to all files under models/example/
      staging:
        enabled: true  
        materialized: view
      dim:
        enabled: true  
        materialized: view
      fact:
        enabled: true  
        materialized: view
      intermediate:
        enabled: true  
        materialized: view
      marts:
        enabled: true  
        materialized: table

sources:
  my_pack:
    bod:
      +enabled: true




on-run-start:
    - "set main_uuid=(select UUID_STRING())"
    - "create table if not exists public.audit (model text, state text, time timestamp)"